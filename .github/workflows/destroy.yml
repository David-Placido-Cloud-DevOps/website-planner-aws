name: Terraform Destroy
on:
  workflow_dispatch:  # Permite ejecutar este pipeline manualmente desde la interfaz de GitHub
    inputs:
      confirm:
        description: '¿Estás seguro de querer destruir la infraestructura? (Escribe "yes")'
        required: true
        default: 'no'
env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
jobs:
  terraform-destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Configure Terraform CLI Token
      run: echo "credentials \"app.terraform.io\" { token = \"${{ secrets.TF_API_TOKEN }}\" }" > ~/.terraformrc

    - name: Terraform init
      run: terraform init -input=false
      working-directory: ./infra

    - name: Terraform validate
      run: terraform validate
      working-directory: ./infra

    - name: Vaciar el bucket S3
      run: |
        aws s3 rm s3://elplannerdelanovia.pro --recursive || echo "El bucket ya estaba vacío"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Terraform destroy
      run: terraform destroy -auto-approve
      working-directory: ./infra